<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.boot.user.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.demo.boot.user.model.User">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="field1" jdbcType="VARCHAR" property="field1" />
    <result column="field2" jdbcType="VARCHAR" property="field2" />
    <result column="field3" jdbcType="VARCHAR" property="field3" />
    <result column="field4" jdbcType="VARCHAR" property="field4" />
    <result column="field5" jdbcType="VARCHAR" property="field5" />
    <result column="field6" jdbcType="VARCHAR" property="field6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    id, name, register_time, age, field1, field2, field3, field4, field5, field6
  </sql>
  <insert id="insert" parameterType="com.demo.boot.user.model.User">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    INSERT INTO t_users (
      name, register_time, age, field1, field2, field3, field4, field5, field6
    ) VALUES (  
      #{name,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{age,jdbcType=INTEGER}, 
      #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR}, #{field3,jdbcType=VARCHAR}, 
      #{field4,jdbcType=VARCHAR}, #{field5,jdbcType=VARCHAR}, #{field6,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    INSERT INTO t_users (
      name, register_time, age, field1, field2, field3, field4, field5, field6
    ) VALUES 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item.name,jdbcType=VARCHAR}, #{item.registerTime,jdbcType=TIMESTAMP}, #{item.age,jdbcType=INTEGER}, 
      #{item.field1,jdbcType=VARCHAR}, #{item.field2,jdbcType=VARCHAR}, #{item.field3,jdbcType=VARCHAR}, 
      #{item.field4,jdbcType=VARCHAR}, #{item.field5,jdbcType=VARCHAR}, #{item.field6,jdbcType=VARCHAR}
    </foreach>
  </insert>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    SELECT <include refid="Base_Column_List" /> FROM t_users WHERE id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectOne" parameterType="com.demo.boot.user.model.User" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    SELECT <include refid="Base_Column_List" /> FROM t_users
    <where>
      <if test="name != null">
        AND name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="registerTime != null">
        AND register_time = #{registerTime,jdbcType=TIMESTAMP}
      </if>
      <if test="age != null">
        AND age = #{age,jdbcType=INTEGER}
      </if>
      <if test="field1 != null">
        AND field1 = #{field1,jdbcType=VARCHAR}
      </if>
      <if test="field2 != null">
        AND field2 = #{field2,jdbcType=VARCHAR}
      </if>
      <if test="field3 != null">
        AND field3 = #{field3,jdbcType=VARCHAR}
      </if>
      <if test="field4 != null">
        AND field4 = #{field4,jdbcType=VARCHAR}
      </if>
      <if test="field5 != null">
        AND field5 = #{field5,jdbcType=VARCHAR}
      </if>
      <if test="field6 != null">
        AND field6 = #{field6,jdbcType=VARCHAR}
      </if>
      LIMIT 1
    </where>
  </select>
  <select id="selectList" parameterType="com.demo.boot.user.model.User" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    SELECT <include refid="Base_Column_List" /> FROM t_users
    <where>
      <if test="name != null">
        AND name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="registerTime != null">
        AND register_time = #{registerTime,jdbcType=TIMESTAMP}
      </if>
      <if test="age != null">
        AND age = #{age,jdbcType=INTEGER}
      </if>
      <if test="field1 != null">
        AND field1 = #{field1,jdbcType=VARCHAR}
      </if>
      <if test="field2 != null">
        AND field2 = #{field2,jdbcType=VARCHAR}
      </if>
      <if test="field3 != null">
        AND field3 = #{field3,jdbcType=VARCHAR}
      </if>
      <if test="field4 != null">
        AND field4 = #{field4,jdbcType=VARCHAR}
      </if>
      <if test="field5 != null">
        AND field5 = #{field5,jdbcType=VARCHAR}
      </if>
      <if test="field6 != null">
        AND field6 = #{field6,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    SELECT <include refid="Base_Column_List" /> FROM t_users
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    DELETE FROM t_users WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  <update id="update" parameterType="com.demo.boot.user.model.User">
    <!--@mbg.generated 2019-03-18 23:43:21-->
    UPDATE t_users
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="field1 != null">
        field1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        field2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        field3 = #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null">
        field4 = #{field4,jdbcType=VARCHAR},
      </if>
      <if test="field5 != null">
        field5 = #{field5,jdbcType=VARCHAR},
      </if>
      <if test="field6 != null">
        field6 = #{field6,jdbcType=VARCHAR},
      </if>
    </set>
     WHERE id = #{id,jdbcType=BIGINT}
  </update>
</mapper>