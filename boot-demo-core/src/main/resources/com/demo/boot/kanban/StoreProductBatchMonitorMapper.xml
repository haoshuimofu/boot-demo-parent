<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.boot.kanban.dao.StoreProductBatchMonitorDao">
  <resultMap id="BaseResultMap" type="com.demo.boot.kanban.model.StoreProductBatchMonitor">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="batch_id" jdbcType="VARCHAR" property="batchId" />
    <result column="batch_update_time" jdbcType="TIMESTAMP" property="batchUpdateTime" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    id, type, store_id, product_id, batch_id, batch_update_time, total, create_time, 
    update_time
  </sql>
  <insert id="insert" parameterType="com.demo.boot.kanban.model.StoreProductBatchMonitor">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    INSERT INTO store_product_batch_monitor (
      type, store_id, product_id, batch_id, batch_update_time, total, create_time, update_time
    ) VALUES (#{type,jdbcType=SMALLINT}, #{storeId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{batchId,jdbcType=VARCHAR}, #{batchUpdateTime,jdbcType=TIMESTAMP}, #{total,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    INSERT INTO store_product_batch_monitor (
      type, store_id, product_id, batch_id, batch_update_time, total, create_time, update_time
    ) VALUES 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item.type,jdbcType=SMALLINT}, #{item.store_id,jdbcType=INTEGER}, #{item.product_id,jdbcType=INTEGER}, 
      #{item.batch_id,jdbcType=VARCHAR}, #{item.batch_update_time,jdbcType=TIMESTAMP}, 
      #{item.total,jdbcType=INTEGER}, #{item.create_time,jdbcType=TIMESTAMP}, #{item.update_time,jdbcType=TIMESTAMP}
    </foreach>
  </insert>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    SELECT <include refid="Base_Column_List" /> FROM store_product_batch_monitor WHERE id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectOne" parameterType="com.demo.boot.kanban.model.StoreProductBatchMonitor" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    SELECT <include refid="Base_Column_List" /> FROM store_product_batch_monitor
    <where>
      <if test="type != null">
        AND type = #{type,jdbcType=SMALLINT}
      </if>
      <if test="storeId != null">
        AND store_id = #{storeId,jdbcType=INTEGER}
      </if>
      <if test="productId != null">
        AND product_id = #{productId,jdbcType=INTEGER}
      </if>
      <if test="batchId != null">
        AND batch_id = #{batchId,jdbcType=VARCHAR}
      </if>
      <if test="batchUpdateTime != null">
        AND batch_update_time = #{batchUpdateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="total != null">
        AND total = #{total,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      LIMIT 1
    </where>
  </select>
  <select id="selectList" parameterType="com.demo.boot.kanban.model.StoreProductBatchMonitor" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    SELECT <include refid="Base_Column_List" /> FROM store_product_batch_monitor
    <where>
      <if test="type != null">
        AND type = #{type,jdbcType=SMALLINT}
      </if>
      <if test="storeId != null">
        AND store_id = #{storeId,jdbcType=INTEGER}
      </if>
      <if test="productId != null">
        AND product_id = #{productId,jdbcType=INTEGER}
      </if>
      <if test="batchId != null">
        AND batch_id = #{batchId,jdbcType=VARCHAR}
      </if>
      <if test="batchUpdateTime != null">
        AND batch_update_time = #{batchUpdateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="total != null">
        AND total = #{total,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    SELECT <include refid="Base_Column_List" /> FROM store_product_batch_monitor
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    DELETE FROM store_product_batch_monitor WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  <update id="update" parameterType="com.demo.boot.kanban.model.StoreProductBatchMonitor">
    <!--@mbg.generated 2019-03-18 18:39:28-->
    UPDATE store_product_batch_monitor
    <set>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="batchUpdateTime != null">
        batch_update_time = #{batchUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
     WHERE id = #{id,jdbcType=BIGINT}
  </update>
</mapper>